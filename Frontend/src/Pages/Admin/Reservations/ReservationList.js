import React, { useState, useEffect } from 'react';
import './ReservationsStyle.css';
import axios from 'axios';

const ReservationList = () => {
  const [reservation, setReservation] = useState([]); // √âtat pour les r√©servations r√©cup√©r√©es
  const [reservationModalVisible, setReservationModalVisible] = useState(false); // Affichage de la modal
  const [selectedReservation, setSelectedReservation] = useState(null); // R√©servation s√©lectionn√©e

  // R√©cup√©rer les r√©s√©rvations du backend
  useEffect(() => {
    axios.get('http://localhost:5000/reservation/all')
      .then(response => {
        console.log('Donn√©es r√©cup√©r√©es :', response.data);
        setReservation(response.data.allreservation || []); // Corrig√© pour correspondre √† la r√©ponse du backend
      })
      .catch(error => {
        console.error("Erreur lors de la r√©cup√©ration des r√©servations :", error);
      });
  }, []);

  useEffect(() => {
    console.log('R√©servations √† afficher :', reservation);
  }, [reservation]);


  // Supprimer une r√©servation
  const deleteReservation = (index) => {
    axios.delete(`http://localhost:5000/reservation/${reservation[index]._id}`)
      .then(() => {
        const updatedReservation = reservation.filter((_, i) => i !== index);
        setReservation(updatedReservation);
      })
      .catch(error => {
        console.error("Erreur lors de la suppression de la r√©servation :", error);
      });
  };

  // Confirmer une r√©servation
  const confirmReservation = (index) => {
    axios.put(`http://localhost:5000/reservation/${reservation[index]._id}/confirm`)
      .then(() => {
        alert("R√©servation confirm√©e avec succ√®s !");
      })
      .catch(error => {
        console.error("Erreur lors de la confirmation de la r√©servation :", error);
      });
  };

  // Rejeter une r√©servation
  const rejectReservation = (index) => {
    axios.put(`http://localhost:5000/reservation/${reservation[index]._id}/reject`)
      .then(() => {
        alert("R√©servation rejet√©e avec succ√®s !");
      })
      .catch(error => {
        console.error("Erreur lors du rejet de la r√©servation :", error);
      });
  };

  // Fermer la modal
  const closeModal = () => {
    setReservationModalVisible(false);
  };

  return (
    <div className="bodyEv">
      {/* Bouton Home */}
      <a href="/privateRoute" className="home-button">‚òö</a>

      <div className="container">
        <table>
          <thead>
            <tr>
              <th>Nom Complet</th>
              <th>Email</th>
              <th>T√©l√©phone</th>
              <th>Nombre de tickets</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            {reservation.map((reservation, index) => (
              <tr key={reservation._id}>
                <td>{reservation.fullName}</td>
                <td>{reservation.email}</td>
                <td>{reservation.phone}</td>
                <td>{reservation.numberOfTickets}</td>
                <td>
                  <button className="confirm" onClick={() => confirmReservation(index)}>‚úîÔ∏è</button>
                  <button className="reject" onClick={() => rejectReservation(index)}>‚ùå</button>
                  <button className="delete" onClick={() => deleteReservation(index)}>üóëÔ∏è</button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {/* Modal pour afficher les d√©tails des r√©servations */}
      {reservationModalVisible && selectedReservation && (
  <div className="modal" onClick={closeModal}>
    <div
      className="modal-content"
      onClick={(e) => e.stopPropagation()} // Emp√™che le clic sur le contenu de fermer la modal
    >
      <span className="close" onClick={closeModal}>&times;</span>
      <h2>Nom: {selectedReservation.fullName}</h2>
      <p>Email: {selectedReservation.email}</p>
      <p>T√©l√©phone: {selectedReservation.phone}</p>
      <p>Nombre de tickets: {selectedReservation.numberOfTickets}</p>
      <div className="modal-actions">
        <button className="confirm" onClick={() => confirmReservation(reservation.indexOf(selectedReservation))}>‚úîÔ∏è Confirmer</button>
        <button className="reject" onClick={() => rejectReservation(reservation.indexOf(selectedReservation))}>‚ùå Rejeter</button>
      </div>
    </div>
  </div>
)}
    </div>
  );
};

export default ReservationList;
